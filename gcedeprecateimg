#!/usr/bin/python3

# Copyright 2024 SUSE LLC
#
# This file is part of gceimgutils
#
# gceimgutils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# gceimgutils is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with gceremoveimg. If not, see <http://www.gnu.org/licenses/>.

import argparse
import logging
import os
import sys

import gceimgutils.gceutils as utils
from gceimgutils.gcedeprecateimage import GCEDeprecateImage

# Set up command line argument parsing
argparse = argparse.ArgumentParser(description='Deprecate image in GCE')
argparse.add_argument(
    '-c', '--credentials-file',
    dest='credentials_file_path',
    help='Path to the service account credentials file',
    metavar='CREDENTIALS_FILE'
)
argparse.add_argument(
    '-p', '--project',
    dest='project_name',
    help='Project to use for image creation',
    metavar='PROJECT_NAME',
    required=True
)
argparse.add_argument(
    '--image-name',
    dest='image_name',
    help='The image name of the image to be deprecated',
    required=True
)
argparse.add_argument(
    '--replacement-image-name',
    dest='replacement_image_name',
    help='The image name of the replacement image',
    required=True
)
argparse.add_argument(
    '--verbose',
    action='store_true',
    default=False,
    dest='verbose',
    help='Enable on verbose output'
)
argparse.add_argument(
    '--version',
    action='version',
    version=utils.get_version(),
    help='Program version'
)

args = argparse.parse_args()

logger = utils.get_logger(args.verbose)

credentials_file = None
if args.credentials_file_path:
    credentials_file = os.path.expanduser(args.credentials_file_path)

log_level = logging.INFO
if args.verbose:
    logging.DEBUG

deprecater = GCEDeprecateImage(
    args.image_name,
    args.replacement_image_name,
    credentials_path=credentials_file,
    project=args.project_name,
    log_callback=logger,
    log_level=log_level,
)

try:
    deprecater.deprecate_image()
except Exception as e:
    logger.exception(e)
    sys.exit(1)
